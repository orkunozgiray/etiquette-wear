{"version":3,"sources":["components/Navbar/NavbarElements.js","components/Navbar/index.js","components/Sidebar/SidebarElements.js","components/Sidebar/index.js","pages/home.js","App.js","reportWebVitals.js","index.js"],"names":["Nav","styled","nav","scrollNav","NavContainer","div","NavLogo","LinkR","MobileIcon","NavMenu","ul","NavItem","li","NavLinks","LinkS","NavBtn","NavBtnLink","Navbar","toggle","useState","setScrollNav","changeNav","window","scrollY","useEffect","addEventListener","to","onClick","scroll","scrollToTop","smooth","duration","spy","exact","offset","SidebarContainer","aside","isOpen","Icon","CloseIcon","FaTimes","SidebarWrapper","SidebarMenu","SidebarLinks","SideBtnWrap","SidebarRoute","Sidebar","Home","setIsOpen","App","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.95fc0f23.chunk.js","sourcesContent":["import styled from 'styled-components';\r\nimport { Link as LinkR } from 'react-router-dom';\r\nimport { Link as LinkS } from 'react-scroll';\r\n\r\nexport const Nav = styled.nav`\r\n    background: ${({scrollNav}) => (scrollNav ? '#000' : 'black')};\r\n    height: 80px;\r\n    margin-top: -10px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    font-size: 1rem;\r\n    position: sticky;\r\n    top: 0;\r\n    z-index: 10;\r\n\r\n    @media screen and (max-width: 960px) {\r\n        transition: 0.8s all ease;\r\n    }\r\n`;\r\n\r\nexport const NavContainer = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    height: 80px;\r\n    z-index: 1;\r\n    width: 100%;\r\n    padding: 0 24px;\r\n    max-width: 1100px;\r\n`;\r\n\r\nexport const NavLogo = styled(LinkR)`\r\n    color:  #fff;\r\n    justify-self: flex-start;\r\n    cursor: pointer;\r\n    font-size: 2.5rem;\r\n    letter-spacing: 10px;\r\n    display: flex;\r\n    align-items: center;\r\n    margin-left: -40px;\r\n    font-weight: bold;\r\n    text-decoration: none;\r\n    transition: all 0.5s ease-in-out;\r\n\r\n    &:hover {\r\n        transition: all 0.5s ease-in-out;\r\n        letter-spacing: 15px;\r\n    }\r\n\r\n    @media screen and (max-width: 960px) {\r\n        margin-left: 20px;\r\n    }\r\n`;\r\n\r\nexport const MobileIcon = styled.div`\r\n    display: none;\r\n\r\n    @media screen and (max-width: 768px) {\r\n        display: block;\r\n        position: absolute;\r\n        top: 0;\r\n        right: 0;\r\n        transform: translate(-100%, 60%);\r\n        font-size: 1.8rem;\r\n        cursor: pointer;\r\n        color: #fff;\r\n    }\r\n\r\n`;\r\n\r\nexport const NavMenu = styled.ul`\r\n    display: flex;\r\n    align-items: center;\r\n    list-style: none;\r\n    text-align: center;\r\n    margin-right: -20px;\r\n\r\n    @media screen and (max-width: 768px) {\r\n        display: none;\r\n    }\r\n`;\r\n\r\nexport const NavItem = styled.li`\r\n    height: 80px;\r\n\r\n`;\r\n\r\nexport const NavLinks = styled(LinkS)`\r\n    color: #fff;\r\n    display: flex;\r\n    align-items: center;\r\n    text-decoration: none;\r\n    padding: 0 1rem;\r\n    height: 100%;\r\n    font-size: 18px;\r\n    letter-spacing: 4px;\r\n    cursor: pointer;\r\n    transition: all 0.4s ease-in-out;\r\n\r\n    &.active {\r\n        border-bottom: 3px solid #01bf71;\r\n    }\r\n\r\n    &:hover {\r\n        transition: all 0.4s ease-in-out;\r\n        font-size: 22px;\r\n        letter-spacing: 4px;\r\n        color: #fff;\r\n    }\r\n`;\r\n\r\nexport const NavBtn = styled.nav`\r\n    display: flex;\r\n    align-items: center;\r\n\r\n    @media screen and (max-width: 768px) {\r\n        display: none;\r\n    }\r\n`;\r\n\r\nexport const NavBtnLink = styled(LinkR)`\r\n    border-radius: 18px;\r\n    background: #fff;\r\n    white-space: nowrap;\r\n    margin: 10px -30px 0 20px;\r\n    padding: 10px 22px;\r\n    color: #010606;\r\n    font-size: 16px;\r\n    outline: none;\r\n    border: 1.5px solid #ccd5f0;\r\n    cursor: pointer;\r\n    transition: all 0.4s ease-in-out;\r\n    text-decoration: none;\r\n\r\n    &:hover {\r\n        transition: all 0.4s ease-in-out;\r\n        background: #d0e2f2;\r\n        color: #010606;\r\n        letter-spacing: 1.5px;\r\n    }\r\n`;","import React, { useState, useEffect } from 'react';\r\nimport { FaBars } from 'react-icons/fa';\r\nimport { animateScroll as scroll } from 'react-scroll';\r\nimport {\r\n    Nav, \r\n    NavContainer, \r\n    NavLogo,\r\n    MobileIcon,\r\n    NavMenu,\r\n    NavItem,\r\n    NavLinks,\r\n    NavBtn,\r\n    NavBtnLink \r\n} from './NavbarElements';\r\n\r\nconst Navbar = ({ toggle }) => {\r\n\r\n    const [scrollNav, setScrollNav] = useState(false);\r\n\r\n    const changeNav = () => {\r\n        if(window.scrollY >= 80) {\r\n            setScrollNav(true)\r\n        } else {\r\n            setScrollNav(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('scroll', changeNav)\r\n    }, []);\r\n    \r\n    const toggleHome = () => {\r\n        scroll.scrollToTop()\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Nav scrollNav={scrollNav}>\r\n                <NavContainer>\r\n                    <NavLogo to='/' onClick={toggleHome}>ETIQUETTE</NavLogo>\r\n                    <MobileIcon onClick={toggle}>\r\n                        <FaBars />\r\n                    </MobileIcon>\r\n                    <NavMenu>\r\n                        <NavItem>\r\n                            <NavLinks\r\n                                to='/'\r\n                                smooth={true} \r\n                                duration={500} \r\n                                spy={true} \r\n                                exact='true' \r\n                                offset={-80}\r\n                            >\r\n                                WOMEN\r\n                            </NavLinks>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLinks\r\n                                to='/'\r\n                                smooth={true} \r\n                                duration={500} \r\n                                spy={true} \r\n                                exact='true' \r\n                                offset={-80}\r\n                            >\r\n                                MEN\r\n                            </NavLinks>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLinks\r\n                                to='/'\r\n                                smooth={true} \r\n                                duration={500} \r\n                                spy={true} \r\n                                exact='true' \r\n                                offset={-80}\r\n                            >\r\n                                CREATE MY ETIQUETTE\r\n                            </NavLinks>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLinks\r\n                                to='/'\r\n                                smooth={true} \r\n                                duration={500} \r\n                                spy={true} \r\n                                exact='true' \r\n                                offset={-80}\r\n                            >\r\n                                LANGUAGE\r\n                            </NavLinks>\r\n                        </NavItem>\r\n                    </NavMenu>\r\n                    <NavBtn>\r\n                        <NavBtnLink\r\n                            to='/'\r\n                            smooth={true} \r\n                            duration={500} \r\n                            spy={true} \r\n                            exact='true' \r\n                            offset={-80}\r\n                        >\r\n                            Sign In\r\n                        </NavBtnLink>\r\n                    </NavBtn>\r\n                </NavContainer>\r\n            </Nav>  \r\n        </>\r\n    );\r\n}\r\n\r\nexport default Navbar;\r\n","import styled from 'styled-components';\r\nimport { Link as LinkS } from 'react-scroll';\r\nimport { Link as LinkR } from 'react-router-dom';\r\nimport { FaTimes } from 'react-icons/fa';\r\n\r\nexport const SidebarContainer = styled.aside`\r\n    position: fixed;\r\n    z-index: 999;\r\n    width: 100%;\r\n    height: 100%;\r\n    background: #0d0d0d;\r\n    display: grid;\r\n    align-items: center;\r\n    top: 0;\r\n    left: 0;\r\n    transition: 0.3s ease-in-out;\r\n    opacity: ${({ isOpen }) => (isOpen ? '100%' : '0')};\r\n    top:${({ isOpen }) => (isOpen ? '0' : '-100%')}; \r\n`;\r\n\r\nexport const Icon = styled.div`\r\n    position: absolute;\r\n    top: 1.2rem;\r\n    right: 1.5rem;\r\n    background: transparent;\r\n    font-size: 2rem;\r\n    cursor: pointer;\r\n    outline: none;\r\n`;\r\n\r\nexport const CloseIcon = styled(FaTimes)`\r\n    color: #fff;\r\n`;\r\n\r\nexport const SidebarWrapper = styled.div`\r\n    color:#fff;\r\n`;\r\n\r\nexport const SidebarMenu = styled.ul`\r\n    display: grid;\r\n    grid-template-columns: 1fr;\r\n    grid-template-rows: repeat(6, 80px);\r\n    text-align: center;\r\n\r\n    @media screen and (max-width: 480px) {\r\n        grid-template-rows: repeat(6, 60px);\r\n    }\r\n`;\r\n\r\nexport const SidebarLinks = styled(LinkS)`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    font-size: 1.5rem;\r\n    text-decoration: none;\r\n    list-style: none;\r\n    transition: 0.2s ease-in-out;\r\n    text-decoration: none;\r\n    color: #fff;\r\n    cursor: pointer;\r\n\r\n    &:hover {\r\n        color: #01bf71;\r\n        transition: 0.2s ease-in-out;\r\n    }\r\n`;\r\n\r\nexport const SideBtnWrap = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n`;\r\n\r\nexport const SidebarRoute = styled(LinkR)`\r\n    border-radius: 50px;\r\n    background: #01bf71;\r\n    white-space: nowrap;\r\n    padding: 16px 64px;\r\n    color: #010606;\r\n    font-size: 16px;\r\n    outline: none;\r\n    border: none;\r\n    cursor: pointer;\r\n    transition: all 0.2s ease-in-out;\r\n    text-decoration: none;\r\n\r\n    &:hover {\r\n        transition: all 0.2s ease-in-out;\r\n        background: #fff;\r\n        color: #010606;\r\n    }\r\n`;","import React from 'react';\r\nimport { \r\n    SidebarContainer,\r\n    Icon,\r\n    CloseIcon,\r\n    SidebarWrapper,\r\n    SidebarMenu,\r\n    SidebarLinks,\r\n    SideBtnWrap,\r\n    SidebarRoute\r\n } from './SidebarElements';\r\n\r\nconst Sidebar = ({ isOpen, toggle }) => {\r\n    return (\r\n        <>\r\n            <SidebarContainer isOpen={isOpen} onClick={toggle}>\r\n                <Icon onClick={toggle}>\r\n                    <CloseIcon />\r\n                </Icon>\r\n                <SidebarWrapper>\r\n                    <SidebarMenu>\r\n                        <SidebarLinks to='/' onClick={toggle}>WOMEN</SidebarLinks>\r\n                        <SidebarLinks to='/' onClick={toggle}>MEN</SidebarLinks>\r\n                        <SidebarLinks to='/' onClick={toggle}>CREATE MY ETIQUETTE</SidebarLinks>\r\n                    </SidebarMenu>\r\n                    <SideBtnWrap>\r\n                        <SidebarRoute to='/'>Sign In</SidebarRoute>\r\n                    </SideBtnWrap>\r\n                </SidebarWrapper>\r\n            </SidebarContainer>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Sidebar;\r\n","import React, { useState } from 'react';\r\nimport Navbar from '../components/Navbar';\r\nimport Sidebar from '../components/Sidebar';\r\n\r\nconst Home = () => {\r\n\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    const toggle = () => {\r\n        setIsOpen(!isOpen)\r\n    }\r\n\r\n    return (\r\n        <>\r\n          <Sidebar isOpen={isOpen} toggle={toggle}/>\r\n          <Navbar toggle={toggle}/> \r\n        </>\r\n    );\r\n}\r\n\r\nexport default Home;\r\n","import { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Home from './pages/home';\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route path='/etiquette-wear' component={Home} exact />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}